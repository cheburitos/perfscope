/*
 * This file is generated by jOOQ.
 */
package com.perfscope.model


import com.perfscope.model.tables.BranchTypes
import com.perfscope.model.tables.CallPaths
import com.perfscope.model.tables.CallPathsView
import com.perfscope.model.tables.Calls
import com.perfscope.model.tables.CallsView
import com.perfscope.model.tables.Cbr
import com.perfscope.model.tables.CbrView
import com.perfscope.model.tables.CommThreads
import com.perfscope.model.tables.CommThreadsView
import com.perfscope.model.tables.Comms
import com.perfscope.model.tables.ContextSwitches
import com.perfscope.model.tables.ContextSwitchesView
import com.perfscope.model.tables.Dsos
import com.perfscope.model.tables.DsosView
import com.perfscope.model.tables.Machines
import com.perfscope.model.tables.MachinesView
import com.perfscope.model.tables.Samples
import com.perfscope.model.tables.SamplesView
import com.perfscope.model.tables.SelectedEvents
import com.perfscope.model.tables.Symbols
import com.perfscope.model.tables.SymbolsView
import com.perfscope.model.tables.Threads
import com.perfscope.model.tables.ThreadsView

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>branch_types</code>.
     */
    val BRANCH_TYPES: BranchTypes get() = BranchTypes.BRANCH_TYPES

    /**
     * The table <code>call_paths</code>.
     */
    val CALL_PATHS: CallPaths get() = CallPaths.CALL_PATHS

    /**
     * The table <code>call_paths_view</code>.
     */
    val CALL_PATHS_VIEW: CallPathsView get() = CallPathsView.CALL_PATHS_VIEW

    /**
     * The table <code>calls</code>.
     */
    val CALLS: Calls get() = Calls.CALLS

    /**
     * The table <code>calls_view</code>.
     */
    val CALLS_VIEW: CallsView get() = CallsView.CALLS_VIEW

    /**
     * The table <code>cbr</code>.
     */
    val CBR: Cbr get() = Cbr.CBR

    /**
     * The table <code>cbr_view</code>.
     */
    val CBR_VIEW: CbrView get() = CbrView.CBR_VIEW

    /**
     * The table <code>comm_threads</code>.
     */
    val COMM_THREADS: CommThreads get() = CommThreads.COMM_THREADS

    /**
     * The table <code>comm_threads_view</code>.
     */
    val COMM_THREADS_VIEW: CommThreadsView get() = CommThreadsView.COMM_THREADS_VIEW

    /**
     * The table <code>comms</code>.
     */
    val COMMS: Comms get() = Comms.COMMS

    /**
     * The table <code>context_switches</code>.
     */
    val CONTEXT_SWITCHES: ContextSwitches get() = ContextSwitches.CONTEXT_SWITCHES

    /**
     * The table <code>context_switches_view</code>.
     */
    val CONTEXT_SWITCHES_VIEW: ContextSwitchesView get() = ContextSwitchesView.CONTEXT_SWITCHES_VIEW

    /**
     * The table <code>dsos</code>.
     */
    val DSOS: Dsos get() = Dsos.DSOS

    /**
     * The table <code>dsos_view</code>.
     */
    val DSOS_VIEW: DsosView get() = DsosView.DSOS_VIEW

    /**
     * The table <code>machines</code>.
     */
    val MACHINES: Machines get() = Machines.MACHINES

    /**
     * The table <code>machines_view</code>.
     */
    val MACHINES_VIEW: MachinesView get() = MachinesView.MACHINES_VIEW

    /**
     * The table <code>samples</code>.
     */
    val SAMPLES: Samples get() = Samples.SAMPLES

    /**
     * The table <code>samples_view</code>.
     */
    val SAMPLES_VIEW: SamplesView get() = SamplesView.SAMPLES_VIEW

    /**
     * The table <code>selected_events</code>.
     */
    val SELECTED_EVENTS: SelectedEvents get() = SelectedEvents.SELECTED_EVENTS

    /**
     * The table <code>symbols</code>.
     */
    val SYMBOLS: Symbols get() = Symbols.SYMBOLS

    /**
     * The table <code>symbols_view</code>.
     */
    val SYMBOLS_VIEW: SymbolsView get() = SymbolsView.SYMBOLS_VIEW

    /**
     * The table <code>threads</code>.
     */
    val THREADS: Threads get() = Threads.THREADS

    /**
     * The table <code>threads_view</code>.
     */
    val THREADS_VIEW: ThreadsView get() = ThreadsView.THREADS_VIEW

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        BranchTypes.BRANCH_TYPES,
        CallPaths.CALL_PATHS,
        CallPathsView.CALL_PATHS_VIEW,
        Calls.CALLS,
        CallsView.CALLS_VIEW,
        Cbr.CBR,
        CbrView.CBR_VIEW,
        CommThreads.COMM_THREADS,
        CommThreadsView.COMM_THREADS_VIEW,
        Comms.COMMS,
        ContextSwitches.CONTEXT_SWITCHES,
        ContextSwitchesView.CONTEXT_SWITCHES_VIEW,
        Dsos.DSOS,
        DsosView.DSOS_VIEW,
        Machines.MACHINES,
        MachinesView.MACHINES_VIEW,
        Samples.SAMPLES,
        SamplesView.SAMPLES_VIEW,
        SelectedEvents.SELECTED_EVENTS,
        Symbols.SYMBOLS,
        SymbolsView.SYMBOLS_VIEW,
        Threads.THREADS,
        ThreadsView.THREADS_VIEW
    )
}
