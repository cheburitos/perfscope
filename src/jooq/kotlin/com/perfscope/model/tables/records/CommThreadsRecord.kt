/*
 * This file is generated by jOOQ.
 */
package com.perfscope.model.tables.records


import com.perfscope.model.tables.CommThreads

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CommThreadsRecord() : UpdatableRecordImpl<CommThreadsRecord>(CommThreads.COMM_THREADS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var commId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var threadId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised CommThreadsRecord
     */
    constructor(id: Int? = null, commId: Long? = null, threadId: Long? = null): this() {
        this.id = id
        this.commId = commId
        this.threadId = threadId
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised CommThreadsRecord
     */
    constructor(value: com.perfscope.model.tables.pojos.CommThreads?): this() {
        if (value != null) {
            this.id = value.id
            this.commId = value.commId
            this.threadId = value.threadId
            resetChangedOnNotNull()
        }
    }
}
