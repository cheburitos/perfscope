/*
 * This file is generated by jOOQ.
 */
package com.perfscope.model.tables.records


import com.perfscope.model.tables.Samples

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SamplesRecord() : UpdatableRecordImpl<SamplesRecord>(Samples.SAMPLES) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var evselId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var machineId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var threadId: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var commId: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var dsoId: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var symbolId: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var symOffset: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var ip: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var time: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var cpu: Int?
        set(value): Unit = set(10, value)
        get(): Int? = get(10) as Int?

    open var toDsoId: Long?
        set(value): Unit = set(11, value)
        get(): Long? = get(11) as Long?

    open var toSymbolId: Long?
        set(value): Unit = set(12, value)
        get(): Long? = get(12) as Long?

    open var toSymOffset: Long?
        set(value): Unit = set(13, value)
        get(): Long? = get(13) as Long?

    open var toIp: Long?
        set(value): Unit = set(14, value)
        get(): Long? = get(14) as Long?

    open var branchType: Int?
        set(value): Unit = set(15, value)
        get(): Int? = get(15) as Int?

    open var inTx: Boolean?
        set(value): Unit = set(16, value)
        get(): Boolean? = get(16) as Boolean?

    open var callPathId: Long?
        set(value): Unit = set(17, value)
        get(): Long? = get(17) as Long?

    open var insnCount: Long?
        set(value): Unit = set(18, value)
        get(): Long? = get(18) as Long?

    open var cycCount: Long?
        set(value): Unit = set(19, value)
        get(): Long? = get(19) as Long?

    open var flags: Int?
        set(value): Unit = set(20, value)
        get(): Int? = get(20) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised SamplesRecord
     */
    constructor(id: Int? = null, evselId: Long? = null, machineId: Long? = null, threadId: Long? = null, commId: Long? = null, dsoId: Long? = null, symbolId: Long? = null, symOffset: Long? = null, ip: Long? = null, time: Long? = null, cpu: Int? = null, toDsoId: Long? = null, toSymbolId: Long? = null, toSymOffset: Long? = null, toIp: Long? = null, branchType: Int? = null, inTx: Boolean? = null, callPathId: Long? = null, insnCount: Long? = null, cycCount: Long? = null, flags: Int? = null): this() {
        this.id = id
        this.evselId = evselId
        this.machineId = machineId
        this.threadId = threadId
        this.commId = commId
        this.dsoId = dsoId
        this.symbolId = symbolId
        this.symOffset = symOffset
        this.ip = ip
        this.time = time
        this.cpu = cpu
        this.toDsoId = toDsoId
        this.toSymbolId = toSymbolId
        this.toSymOffset = toSymOffset
        this.toIp = toIp
        this.branchType = branchType
        this.inTx = inTx
        this.callPathId = callPathId
        this.insnCount = insnCount
        this.cycCount = cycCount
        this.flags = flags
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised SamplesRecord
     */
    constructor(value: com.perfscope.model.tables.pojos.Samples?): this() {
        if (value != null) {
            this.id = value.id
            this.evselId = value.evselId
            this.machineId = value.machineId
            this.threadId = value.threadId
            this.commId = value.commId
            this.dsoId = value.dsoId
            this.symbolId = value.symbolId
            this.symOffset = value.symOffset
            this.ip = value.ip
            this.time = value.time
            this.cpu = value.cpu
            this.toDsoId = value.toDsoId
            this.toSymbolId = value.toSymbolId
            this.toSymOffset = value.toSymOffset
            this.toIp = value.toIp
            this.branchType = value.branchType
            this.inTx = value.inTx
            this.callPathId = value.callPathId
            this.insnCount = value.insnCount
            this.cycCount = value.cycCount
            this.flags = value.flags
            resetChangedOnNotNull()
        }
    }
}
