/*
 * This file is generated by jOOQ.
 */
package com.perfscope.model.tables.records


import com.perfscope.model.tables.CommThreadsView

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CommThreadsViewRecord() : TableRecordImpl<CommThreadsViewRecord>(CommThreadsView.COMM_THREADS_VIEW) {

    open var commId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var command: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var threadId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var pid: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var tid: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    /**
     * Create a detached, initialised CommThreadsViewRecord
     */
    constructor(commId: Long? = null, command: String? = null, threadId: Long? = null, pid: Int? = null, tid: Int? = null): this() {
        this.commId = commId
        this.command = command
        this.threadId = threadId
        this.pid = pid
        this.tid = tid
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised CommThreadsViewRecord
     */
    constructor(value: com.perfscope.model.tables.pojos.CommThreadsView?): this() {
        if (value != null) {
            this.commId = value.commId
            this.command = value.command
            this.threadId = value.threadId
            this.pid = value.pid
            this.tid = value.tid
            resetChangedOnNotNull()
        }
    }
}
