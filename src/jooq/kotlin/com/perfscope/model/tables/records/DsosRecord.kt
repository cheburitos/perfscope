/*
 * This file is generated by jOOQ.
 */
package com.perfscope.model.tables.records


import com.perfscope.model.tables.Dsos

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DsosRecord() : UpdatableRecordImpl<DsosRecord>(Dsos.DSOS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var machineId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var shortName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var longName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var buildId: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised DsosRecord
     */
    constructor(id: Int? = null, machineId: Long? = null, shortName: String? = null, longName: String? = null, buildId: String? = null): this() {
        this.id = id
        this.machineId = machineId
        this.shortName = shortName
        this.longName = longName
        this.buildId = buildId
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DsosRecord
     */
    constructor(value: com.perfscope.model.tables.pojos.Dsos?): this() {
        if (value != null) {
            this.id = value.id
            this.machineId = value.machineId
            this.shortName = value.shortName
            this.longName = value.longName
            this.buildId = value.buildId
            resetChangedOnNotNull()
        }
    }
}
